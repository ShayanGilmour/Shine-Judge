#include<iostream>
using namespace std;

#include<string>
using std::string;

#include<math.h>

//this function counts the number of digits
int digitCount(long int number, int count = 0)
{
    while(number >= 1){
        count++;
        number /= 10;
    }
    return count;
}

//this is a function for printing every 3digit part of the big number
void Three_Digits(int number)
{
    string numArr[] = {
        "", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten",
        "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty",
        "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"
    };
    if ( number/100 == 0 )
    {
        if ( number<=20 )
        {
            cout<< numArr[number];
            if ( number != 0 )
                cout <<" ";
        }    
        else
        {
            cout << numArr[number/10 + 20] << " ";
            number = number%10;
            if (number != 0) 
                cout << numArr[number]<< " ";
        }
    } else {
        cout << numArr[number/100] << " hundred";
        if ( number%100 != 0 ) cout << " ";
        number = number%100;
        if ( number<=20 )
            cout << numArr[number]<< " ";
        else
        {
            cout << numArr[number/10 + 20] << " ";
            number = number%10;
            if (number != 0) 
                cout << numArr[number]<< " ";
        }
    }
}

//the main func, passes 3digit to the func above and prints the extensions
void printNum(long int number)
{
    string numArr[] = {
        "", "thousand", "million", "billion", "trillion", "quadrillion",
        "quintillion", "sextillion", "septillion", "octillion", "nonillion", 
        "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion",
        "quindecillion", "sexdecillion", "septendecillion", "octodecillion",
        "novemdecillion", "vigintillion", "unvigintillion", "duovigintillion",
        "trevigintillion", "quattuorvigintillion", "quinvigitillion", "sexvigintillion"
    };
    //cout << "hoy";
    int digC = digitCount(number), num1 = digC % 3, num2 = digC / 3, help1 = 0, help2;
    while( num2 >= 0 ){
        int ten_pow = 3*num2;
        if (num2 == 0)
            ten_pow = 0;
        //cout << "help should be: " << number / pow(10,ten_pow) << " ";
        help1 = number / pow(10,ten_pow);
        //cout << "help is: "<< help1<< " pow: "<< ten_pow << " ";
        Three_Digits(help1);
        if ( help1 != 0 )
            cout << numArr[num2]<< " ";
        number -= help1*pow(10, ten_pow); 
        //cout << "number: " << number<< " ";
        num2--;
    }
    
}

int main()
{
    long int number;
    cin >> number;
    if ( number == 0 )
    {
        cout << "zero";
        return 0;
    }
    printNum(number);
    cout << endl;
    return 0;
}
